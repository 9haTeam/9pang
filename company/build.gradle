plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.9hateam'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}
repositories {
	mavenCentral()
	mavenLocal()
}
ext {
	set('springCloudVersion', "2024.0.0")
	snippetsDir = file('build/generated-snippets')
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

// ✅ Spring Boot Redis Starter (Spring Data Redis + 기본 클라이언트 Lettuce 포함)
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

// ✅ Date 타입 redis에 저장하기 위해 필요한 의존성
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'


// ✅ (선택) Spring Cache와 함께 사용 시 필요
	implementation 'org.springframework.boot:spring-boot-starter-cache'

	// ✅ JSON
	implementation 'org.json:json:20231013'

	// ✅ Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// ✅ Thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// ✅ OpenFeign (Spring Cloud)
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	// ✅ Spring Boot 기본 스타터
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework:spring-context'

	// ✅ Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// ✅ PostgreSQL
	runtimeOnly 'org.postgresql:postgresql'

	// ✅ 테스트 의존성
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// ✅ 공통 모듈
	implementation 'com.9hateam:common:0.0.1-SNAPSHOT'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
